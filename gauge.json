{
    id: "ai.estilos.amontagna.demo.gauge",
    version: "1.0.0",
    name: "Demo Gauge",
    description: "A gauge demo",
    newInstancePrefix: "Gauge",
    icon: "/gauge/icon.png",
    vendor: "Demo",
    eula: "EULA",
    license: "1.0",
    webcomponents: [{
            kind: "main",
            tag: "ai-estilos-amontagna-demo-gauge",
            url: "/gauge/gauge.js",
            integrity: "",
            ignoreIntegrity: true
        }, {
            kind: "styling",
            tag: "ai-estilos-amontagna-demo-gauge-sps",
            url: "/gauge/gauge_sps.js",
            integrity: "",
            ignoreIntegrity: true
        }, {
            kind: "builder",
            tag: "ai-estilos-amontagna-demo-gauge-bps",
            url: "/gauge/gauge_bps.js",
            integrity: "",
            ignoreIntegrity: true
        }
    ],
    properties: {
        value: {
            type: "number",
            description: "Gauge value",
        default:
            "0"
        },
        info: {
            type: "string",
            description: "Gauge info",
        default:
            ""
        },
        color: {
            type: "string",
            description: "Text Color info",
        default:
            "#3498db"
        },
        width: {
            type: "integer",
        default:
            100
        },
        height: {
            type: "integer",
        default:
            100
        }
    },
    methods: {
        setValue: {
            description: "Sets the Gauge value.",
            parameters: [{
                    name: "newValue",
                    type: "number",
                    description: "Gauge value"
                }, {
                    name: "newInfo",
                    type: "string",
                    description: "Gauge info"
                }, {
                    name: "newColor",
                    type: "string",
                    description: "Text Color info"
                }
            ],
            body: "this.value = newValue; this.info = newInfo; this.color = newColor;"
        },
        getValue: {
            returnType: "number",
            description: "Returns the Gauge value.",
            body: "return this.value;"
        }
    },
    events: {
        onClick: {
            description: "Called when the user clicks the gauge."
        }
    }
}
